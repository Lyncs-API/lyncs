# This workflow updates the lyncs packages on PyPI test if version is changed

name: Lyncs upload to PyPI test

on:
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - 'docs/**'
  push:
    branches:
      - 'master'
    paths-ignore:
      - 'docs/**'

jobs:
  build-n-publish:  
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 1
      matrix:
        package:
          - extras/setuptools
          - extras/cppyy
          - extras/clime
          - extras/DDalphaAMG

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install -i https://test.pypi.org/simple/ lyncs-setuptools
        
    - name: Install and upload if not up to date
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.test_pypi_password }}
      run: |
        cd ${{ matrix.package }}
        if [ -f requirements.txt ]; then
          pip install -i https://test.pypi.org/simple/ -r requirements.txt
        fi
        pip install -i https://test.pypi.org/simple/ $(lyncs_setuptools name)==$(lyncs_setuptools version) || (
          python setup.py install
          python setup.py sdist bdist_wheel
          twine upload --repository-url https://test.pypi.org/legacy/ $(ls dist/*{.tar.gz,any.whl} 2> /dev/null)
        )

    - name: Run tests if available
      run: |
        if [ ! -z "$(ls ${{ matrix.package }}/test* 2> /dev/null)" ]; then
          pip install pytest
          pip install pytest-cov
          pytest --cov=${{ matrix.package }} --cov-report=xml $(ls ${{ matrix.package }}/test*)
          export CODECOV_TOKEN="${{ secrets.CODECOV_TOKEN }}"
          bash <(curl -s https://codecov.io/bash) -f ./coverage.xml -n ${{ matrix.package }}
        fi
